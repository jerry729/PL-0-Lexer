TOKEN_TYPE          TOKEN_VALUE
---------------------------------
 varsym             var
T_Identifier        m
,                   ,
T_Identifier        n
,                   ,
T_Identifier        e
,                   ,
T_Identifier        q
;                   ;
procsym             procedure
T_Identifier        gcd
;                   ;
beginsym            begin
whilesym            while
T_Identifier        r
#                   #
T_IntConstant       0
dosym               do
beginsym            begin
T_Identifier        q
T_Eq                :=
T_Identifier        m
/                   /
T_Identifier        n
;                   ;
T_Identifier        r
T_Eq                :=
T_Identifier        m
-                   -
T_Identifier        q
*                   *
T_Identifier        n
;                   ;
T_Identifier        m
T_Eq                :=
T_Identifier        n
;                   ;
T_Identifier        n
T_Eq                :=
T_Identifier        r
;                   ;
endsym              end
endsym              end
;                   ;
beginsym            begin
readsym             read
(                   (
T_Identifier        m
)                   )
;                   ;
readsym             read
(                   (
T_Identifier        n
)                   )
;                   ;
ifsym               if
T_Identifier        m
<                   <
T_Identifier        n
thensym             then
beginsym            begin
T_Identifier        r
T_Eq                :=
T_Identifier        m
;                   ;
T_Identifier        m
T_Eq                :=
T_Identifier        n
;                   ;
T_Identifier        n
T_Eq                :=
T_Identifier        r
;                   ;
endsym              end
;                   ;
beginsym            begin
T_Identifier        r
T_Eq                :=
T_IntConstant       1
;                   ;
callsym             call
T_Identifier        gcd
;                   ;
writesym            write
(                   (
T_Identifier        m
)                   )
;                   ;
endsym              end
;                   ;
endsym              end
.                   .
